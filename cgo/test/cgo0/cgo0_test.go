package cgo0

import (
	"fmt"
	"os"
	"testing"

	"github.com/tj/assert"
)

func TestTriceSequences(t *testing.T) {
	out := make([]byte, 1024)
	setTriceBuffer(out)

	for i, exp := range triceBytes {
		len := triceCode(i)
		act := out[:len]
		fmt.Printf("i=%d, ", i)
		dump(os.Stdout, act)
		assert.Equal(t, exp, act)
	}
}

// triceBytes contains the expected trice byte streams when C.TriceCode is executed.
// This is TCOBSv1 encoded.
var triceBytes = [][]byte{
	{0xdb, 0x55, 0xc0, 0x4, 0x84, 0x0},
	{0xdb, 0x95, 0x16, 0x16, 0xc0, 0x4, 0x86, 0x0},
	{0xdb, 0xd5, 0x32, 0x13, 0xc0, 0x4, 0x82, 0x0},

	{0xea, 0x56, 0xc0, 0x10, 0x1, 0x65, 0x60, 0x20, 0x2, 0x61, 0x60, 0x20, 0x0},
	{0xea, 0x96, 0x16, 0x16, 0xc0, 0x10, 0x1, 0x67, 0x60, 0x20, 0x2, 0x61, 0x60, 0x20, 0x0},
	{0xea, 0xd6, 0x32, 0x13, 0xc0, 0x10, 0x1, 0x63, 0x60, 0x20, 0x2, 0x61, 0x60, 0x20, 0x0},

	{0x28, 0x57, 0xc0, 0xc, 0x41, 0x1d, 0x41, 0x19, 0x41, 0x41, 0xa2, 0x0},
	{0x28, 0x97, 0x16, 0x16, 0xc0, 0xc, 0x41, 0x1f, 0x41, 0x19, 0x41, 0x41, 0xa2, 0x0},
	{0x28, 0xd7, 0x32, 0x13, 0xc0, 0xc, 0x41, 0x1b, 0x41, 0x19, 0x41, 0x41, 0xa2, 0x0},
}
