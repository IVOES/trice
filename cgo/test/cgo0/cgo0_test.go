package cgo0

import (
	"fmt"
	"os"
	"testing"

	"github.com/tj/assert"
)

func TestTriceSequences(t *testing.T) {
	out := make([]byte, 1024)
	setTriceBuffer(out)

	for i, exp := range triceBytes {
		len := triceCode(i)
		act := out[:len]
		fmt.Printf("i=%d, ", i)
		dump(os.Stdout, act)
		assert.Equal(t, exp, act)
	}
}

// triceBytes contains the expected trice byte streams when C.TriceCode is executed.
// This is TCOBSv1 encoded.
var triceBytes = [][]byte{
	{0xdb, 0x75, 0xc0, 0x4, 0x84, 0x0},
	// TCOBSv1: db 75 c9 04 84 00
	// ->TRICE: db 75 c9 04 ff ff ff ff

	{0xdb, 0xb5, 0x16, 0x16, 0xc0, 0x4, 0x86, 0x0},
	// TCOBSv1: db b5 16 16 ca 04 86 00
	// ->TRICE: db b5 16 16 ca 04 ff ff ff ff

	{0xdb, 0xf5, 0x32, 0x13, 0xc0, 0x4, 0x82, 0x0},
	// TCOBSv1: db f5 32 13 cb 04 82 00
	// ->TRICE: db f5 32 32 32 32 cb 04 ff ff ff ff

	{0xdb, 0x35, 0x64, 0x1b, 0x64, 0x9, 0xc0, 0x4, 0x82, 0x0},
	// TCOBSv1: db 35 64 1b 64 09 cc 04 82 00
	// ->TRICE: db 35 64 64 64 64 64 64 64 64 cc 04 ff ff ff ff

	{0xea, 0x76, 0xc0, 0x10, 0x1, 0x65, 0x60, 0x20, 0x2, 0x61, 0x60, 0x20, 0x0},
	{0xea, 0xb6, 0x16, 0x16, 0xc0, 0x10, 0x1, 0x67, 0x60, 0x20, 0x2, 0x61, 0x60, 0x20, 0x0},
	{0xea, 0xf6, 0x32, 0x13, 0xc0, 0x10, 0x1, 0x63, 0x60, 0x20, 0x2, 0x61, 0x60, 0x20, 0x0},
	{0xea, 0x36, 0x64, 0x1b, 0x64, 0x9, 0xc0, 0x10, 0x1, 0x63, 0x60, 0x20, 0x2, 0x61, 0x60, 0x20, 0x0}, // todo
	{0x28, 0x77, 0xc0, 0xc, 0x41, 0x1d, 0x41, 0x19, 0x41, 0x41, 0xa2, 0x0},
	{0x28, 0xb7, 0x16, 0x16, 0xc0, 0xc, 0x41, 0x1f, 0x41, 0x19, 0x41, 0x41, 0xa2, 0x0},
	{0x28, 0xf7, 0x32, 0x13, 0xc0, 0xc, 0x41, 0x1b, 0x41, 0x19, 0x41, 0x41, 0xa2, 0x0},
	{0x28, 0x77, 0xc0, 0xc, 0x41, 0x1d, 0x41, 0x19, 0x41, 0x41, 0xa2, 0x0},
}
